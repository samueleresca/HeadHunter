// <auto-generated />
using HeadHunter.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HeadHunter.API.Migrations
{
    [DbContext(typeof(FeedbackContext))]
    [Migration("20180314134422_Init migration")]
    partial class Initmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HeadHunter.API.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<int?>("IdentityId");

                    b.Property<string>("SubjectEmail");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.HasIndex("SubjectEmail");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("HeadHunter.API.Models.Identity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Identity");
                });

            modelBuilder.Entity("HeadHunter.API.Models.SocialContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Facebook");

                    b.Property<string>("Linkedin");

                    b.Property<string>("Twitter");

                    b.HasKey("Id");

                    b.ToTable("SocialContact");
                });

            modelBuilder.Entity("HeadHunter.API.Models.Subject", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("ProfilePhoto");

                    b.Property<int?>("SocialContactId");

                    b.Property<string>("Surname");

                    b.HasKey("Email");

                    b.HasIndex("SocialContactId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("HeadHunter.API.Models.Feedback", b =>
                {
                    b.HasOne("HeadHunter.API.Models.Identity", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId");

                    b.HasOne("HeadHunter.API.Models.Subject")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SubjectEmail");
                });

            modelBuilder.Entity("HeadHunter.API.Models.Subject", b =>
                {
                    b.HasOne("HeadHunter.API.Models.SocialContact", "SocialContact")
                        .WithMany()
                        .HasForeignKey("SocialContactId");
                });
#pragma warning restore 612, 618
        }
    }
}
